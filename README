= LabVirt

LabVirt aims to be a virtualized machine controlling and reporting
tool. 

== Design criteria

LabVirt aims to provide the controlling tool for a group of
<i>laboratories</i>. Each laboratory can use different <i>profiles</i> - This
means, the computers in this laboratory can be served by different
virtual machine images.

(the above description should be further completed)

=== Virtualization infrastructure

The virtualization scheme to be supported is Linux's KVM. Maybe we
will be able to provide for different schemes (i.e. qemu, xen, etc.)?
It is desirable to be able to run each virtualized machine under a
non-root user - But as the most adequate networking scheme is the
tun/tap interface, I still don't know whether this is possible.

=== Monitoring/administration facilities

The following aspects should be available via the Web monitoring facility:

- Defined machine classes or laboratories
- Active virtual machines
- Available profiles
  - Manage different profiles for each real machine. Each profile is a
    different virtual disk image
  - Profiles should be <i>clonable</i> by an administrator to derive from
    them 
  - The profiles will often be used <i>snapshotted</i>, this means, the
    clients' writes to the disk image should be discarded in order to
    keep the profiles clean (i.e. re: viruses, registry degradation,
    installed programs, etc). Many hosts will share a single disk
    image in a typical lab setting.
  - An <i>administrative profile</i> will exist for each lab
    profile. The only difference is that the disk image will not be
    launched in snapshot mode, but in a regular/updatable
    way. Launching the administrative profile should shutdown all of
    the machines of said profile (or should not be allowed as long as
    there are clients running with it).
  - Affinity/availability of each profile for each laboratory
- Resource consumption for each host (probably better served as a
  hook/link to a separate Munin[http://munin.projects.linpro.no/]
  instance? 
- Which virtual machines are currently serving an established
  connection? (that means, which virtual machines have a connected
  terminal?) (How can this be known without invasively adding a
  queriable daemon to each virtualized host? Pinging each terminal to
  check for its assigned virtual host is too artesanal)
- The whole application is to be internationalizable, via Gettext

== Current status

As of today, this project... Does not do anything useful, and is quite
far from being advertisable.

== Authors

Gunnar Wolf <gwolf@gwolf.org>, Instituto de Investigaciones
Econ√≥micas, UNAM

== Licensing

This project is developed and distributed under an MIT-style license.
